[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "ModelForm",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "migrations.0001_initial",
        "description": "migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Booking',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('first_name', models.CharField(max_length=200)),",
        "detail": "migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "migrations.0002_menu_menu_item_description",
        "description": "migrations.0002_menu_menu_item_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('restaurant', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='menu',\n            name='menu_item_description',\n            field=models.TextField(default='', max_length=1000),\n        ),",
        "detail": "migrations.0002_menu_menu_item_description",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "migrations.0003_remove_booking_comment_remove_booking_guest_number_and_more",
        "description": "migrations.0003_remove_booking_comment_remove_booking_guest_number_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('restaurant', '0002_menu_menu_item_description'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='booking',\n            name='comment',\n        ),\n        migrations.RemoveField(",
        "detail": "migrations.0003_remove_booking_comment_remove_booking_guest_number_and_more",
        "documentation": {}
    },
    {
        "label": "RestaurantConfig",
        "kind": 6,
        "importPath": "apps",
        "description": "apps",
        "peekOfCode": "class RestaurantConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'restaurant'",
        "detail": "apps",
        "documentation": {}
    },
    {
        "label": "BookingForm",
        "kind": 6,
        "importPath": "forms",
        "description": "forms",
        "peekOfCode": "class BookingForm(ModelForm):\n    class Meta:\n        model = Booking\n        fields = \"__all__\"",
        "detail": "forms",
        "documentation": {}
    },
    {
        "label": "Booking",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class Booking(models.Model):\n    first_name = models.CharField(max_length=200)\n    reservation_date = models.DateField()\n    reservation_slot = models.SmallIntegerField(default=10)\n    def __str__(self): \n        return self.first_name\n# Add code to create Menu model\nclass Menu(models.Model):\n   name = models.CharField(max_length=200) \n   price = models.IntegerField(null=False) ",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Menu",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class Menu(models.Model):\n   name = models.CharField(max_length=200) \n   price = models.IntegerField(null=False) \n   menu_item_description = models.TextField(max_length=1000, default='') \n   def __str__(self):\n      return self.name",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "urls",
        "description": "urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.home, name=\"home\"),\n    path('about/', views.about, name=\"about\"),\n    path('book/', views.book, name=\"book\"),\n    path('reservations/', views.reservations, name=\"reservations\"),\n    path('menu/', views.menu, name=\"menu\"),\n    path('menu_item/<int:pk>/', views.display_menu_item, name=\"menu_item\"),  \n    path('bookings', views.bookings, name='bookings'), \n]",
        "detail": "urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def home(request):\n    return render(request, 'index.html')\ndef about(request):\n    return render(request, 'about.html')\ndef reservations(request):\n    date = request.GET.get('date',datetime.today().date())\n    bookings = Booking.objects.all()\n    booking_json = serializers.serialize('json', bookings)\n    return render(request, 'bookings.html',{\"bookings\":booking_json})\ndef book(request):",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def about(request):\n    return render(request, 'about.html')\ndef reservations(request):\n    date = request.GET.get('date',datetime.today().date())\n    bookings = Booking.objects.all()\n    booking_json = serializers.serialize('json', bookings)\n    return render(request, 'bookings.html',{\"bookings\":booking_json})\ndef book(request):\n    form = BookingForm()\n    if request.method == 'POST':",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "reservations",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def reservations(request):\n    date = request.GET.get('date',datetime.today().date())\n    bookings = Booking.objects.all()\n    booking_json = serializers.serialize('json', bookings)\n    return render(request, 'bookings.html',{\"bookings\":booking_json})\ndef book(request):\n    form = BookingForm()\n    if request.method == 'POST':\n        form = BookingForm(request.POST)\n        if form.is_valid():",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "book",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def book(request):\n    form = BookingForm()\n    if request.method == 'POST':\n        form = BookingForm(request.POST)\n        if form.is_valid():\n            form.save()\n    context = {'form':form}\n    return render(request, 'book.html', context)\n# Add your code here to create new views\ndef menu(request):",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "menu",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def menu(request):\n    menu_data = Menu.objects.all()\n    main_data = {\"menu\": menu_data}\n    return render(request, 'menu.html', {\"menu\": main_data})\ndef display_menu_item(request, pk=None): \n    if pk: \n        menu_item = Menu.objects.get(pk=pk) \n    else: \n        menu_item = \"\" \n    return render(request, 'menu_item.html', {\"menu_item\": menu_item}) ",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "display_menu_item",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def display_menu_item(request, pk=None): \n    if pk: \n        menu_item = Menu.objects.get(pk=pk) \n    else: \n        menu_item = \"\" \n    return render(request, 'menu_item.html', {\"menu_item\": menu_item}) \n@csrf_exempt\ndef bookings(request):\n    if request.method == 'POST':\n        data = json.load(request)",
        "detail": "views",
        "documentation": {}
    },
    {
        "label": "bookings",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def bookings(request):\n    if request.method == 'POST':\n        data = json.load(request)\n        exist = Booking.objects.filter(reservation_date=data['reservation_date']).filter(\n            reservation_slot=data['reservation_slot']).exists()\n        if exist==False:\n            booking = Booking(\n                first_name=data['first_name'],\n                reservation_date=data['reservation_date'],\n                reservation_slot=data['reservation_slot'],",
        "detail": "views",
        "documentation": {}
    }
]